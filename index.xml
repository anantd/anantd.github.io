<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Anant Dalela</title>
    <link>https://anantd.github.io/</link>
    <description>Recent content on Anant Dalela</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 12 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://anantd.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Implementing KNN with numpy</title>
      <link>https://anantd.github.io/notebook/knn-with-numpy/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://anantd.github.io/notebook/knn-with-numpy/</guid>
      <description>&lt;p&gt;This is an annotated version from the &lt;code&gt;numpy&lt;/code&gt; partitioning section from Jake Van Der Plaas&amp;rsquo; Python Data Science Handbook. In the unlikely event that you haven&amp;rsquo;t heard of it, I highly recommend checking it out (it&amp;rsquo;s available for free as a set of Jupyter notebooks). You can find the exact section I&amp;rsquo;m recreating here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jakevdp.github.io/PythonDataScienceHandbook/02.08-sorting.html&#34;&gt;https://jakevdp.github.io/PythonDataScienceHandbook/02.08-sorting.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I was reviewing the section to brush up on &lt;code&gt;numpy&lt;/code&gt;&#39;s broadcasting rules, and thought this example perfectly nailed how terse and elegant &lt;code&gt;numpy&lt;/code&gt; code can be. I&amp;rsquo;m sure I&amp;rsquo;ll revisit this example, I thought I&amp;rsquo;d clean up my notes and save them in a notebook.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Generating 10 random 2-D coordinates:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([[ 1.76405235,  0.40015721],
       [ 0.97873798,  2.2408932 ],
       [ 1.86755799, -0.97727788],
       [ 0.95008842, -0.15135721],
       [-0.10321885,  0.4105985 ],
       [ 0.14404357,  1.45427351],
       [ 0.76103773,  0.12167502],
       [ 0.44386323,  0.33367433],
       [ 1.49407907, -0.20515826],
       [ 0.3130677 , -0.85409574]])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here&amp;rsquo;s the single line implementation of the KNN computation, before we break it down step-by-step:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# single line implementation&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dist_sq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newaxis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newaxis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;axis&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dist_sq&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([[ 0.        ,  4.00502763,  1.90804084,  0.96670543,  3.48681075,
         3.7355896 ,  1.08359066,  1.74731927,  0.43929239,  3.67850689],
       [ 4.00502763,  0.        , 11.1466261 ,  5.72368281,  4.52060927,
         1.3154853 ,  4.53847911,  3.92357482,  6.2487442 , 10.02207345],
       [ 1.90804084, 11.1466261 ,  0.        ,  1.52389537,  5.81016221,
         8.8829441 ,  2.43208457,  3.74550245,  0.7356552 ,  2.4316139 ],
       [ 0.96670543,  5.72368281,  1.52389537,  0.        ,  1.42525042,
         3.22775829,  0.11028676,  0.49151953,  0.29882039,  0.89963684],
       [ 3.48681075,  4.52060927,  5.81016221,  1.42525042,  0.        ,
         1.15039622,  0.83041621,  0.30521614,  2.93051706,  1.77274602],
       [ 3.7355896 ,  1.3154853 ,  8.8829441 ,  3.22775829,  1.15039622,
         0.        ,  2.15650052,  1.34563435,  4.57630966,  5.35713773],
       [ 1.08359066,  4.53847911,  2.43208457,  0.11028676,  0.83041621,
         2.15650052,  0.        ,  0.14554337,  0.64416961,  1.15280571],
       [ 1.74731927,  3.92357482,  3.74550245,  0.49151953,  0.30521614,
         1.34563435,  0.14554337,  0.        ,  1.39329387,  1.4279052 ],
       [ 0.43929239,  6.2487442 ,  0.7356552 ,  0.29882039,  2.93051706,
         4.57630966,  0.64416961,  1.39329387,  0.        ,  1.81590771],
       [ 3.67850689, 10.02207345,  2.4316139 ,  0.89963684,  1.77274602,
         5.35713773,  1.15280571,  1.4279052 ,  1.81590771,  0.        ]])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thanks to numpy&amp;rsquo;s convenient reshaping functions and broadcasting behaviors, this single line computes the squared difference between each pair of points in a vectorized manner.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# first col, the x coordinates&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([ 1.76405235,  0.97873798,  1.86755799,  0.95008842, -0.10321885,
        0.14404357,  0.76103773,  0.44386323,  1.49407907,  0.3130677 ])
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# second col, the y coordinates&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([ 0.40015721,  2.2408932 , -0.97727788, -0.15135721,  0.4105985 ,
        1.45427351,  0.12167502,  0.33367433, -0.20515826, -0.85409574])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here are the 10 points on a scatterplot:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.collections.PathCollection at 0x1133ebc90&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://anantd.github.io/files/knn_with_numpy/output_10_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;step-1-differences-in-each-dimension&#34;&gt;Step 1: differences in each dimension&lt;/h2&gt;
&lt;p&gt;Compute differences in the x and y dimension for each pair of points.&lt;/p&gt;
&lt;p&gt;Note: you can review the full section on broadcasting &lt;a href=&#34;https://jakevdp.github.io/PythonDataScienceHandbook/02.05-computation-on-arrays-broadcasting.html&#34;&gt;in this section&lt;/a&gt;. &lt;a href=&#34;https://medium.com/@ian.dzindo01/what-is-numpy-newaxis-and-when-to-use-it-8cb61c7ed6ae&#34;&gt;This post&lt;/a&gt; has a nice explanation as well.&lt;/p&gt;
&lt;p&gt;The first operand in the difference operation is the original 2-D &lt;code&gt;dat&lt;/code&gt; array expanded over 10 rows.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newaxis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([[[ 1.76405235,  0.40015721]],

       [[ 0.97873798,  2.2408932 ]],

       [[ 1.86755799, -0.97727788]],

       [[ 0.95008842, -0.15135721]],

       [[-0.10321885,  0.4105985 ]],

       [[ 0.14404357,  1.45427351]],

       [[ 0.76103773,  0.12167502]],

       [[ 0.44386323,  0.33367433]],

       [[ 1.49407907, -0.20515826]],

       [[ 0.3130677 , -0.85409574]]])
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newaxis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(10, 1, 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The second operand is the 2D &lt;code&gt;dat&lt;/code&gt; array nested into a single &amp;lsquo;row&amp;rsquo; (row ~ first axis).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newaxis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([[[ 1.76405235,  0.40015721],
        [ 0.97873798,  2.2408932 ],
        [ 1.86755799, -0.97727788],
        [ 0.95008842, -0.15135721],
        [-0.10321885,  0.4105985 ],
        [ 0.14404357,  1.45427351],
        [ 0.76103773,  0.12167502],
        [ 0.44386323,  0.33367433],
        [ 1.49407907, -0.20515826],
        [ 0.3130677 , -0.85409574]]])
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newaxis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(1, 10, 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When the two are subtracted, the second operand is stretched from &lt;code&gt;(1, 10, 2)&lt;/code&gt; to &lt;code&gt;(10, 10, 2)&lt;/code&gt;, which triggers the first operand to be stretched from &lt;code&gt;(10, 1, 2)&lt;/code&gt; to &lt;code&gt;(10, 10, 2)&lt;/code&gt; (i.e. within each row, the point is repeated 10 times)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# for each pair of points, compute differences in their coordinates&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# difference needs to be defined this way for broadcasting to work&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# since first operand is spread out over rows, the full set of points can be subtracted from each pop&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;differences&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newaxis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newaxis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;differences&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(10, 10, 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can see the end result by inspecting one the elements of differences.&lt;/p&gt;
&lt;p&gt;ex: for the first element, the first set of differences is &lt;code&gt;0, 0&lt;/code&gt;, since that&amp;rsquo;s the first point&amp;rsquo;s distance from itself in teh x and y dimensions.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;differences&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([[ 0.        ,  0.        ],
       [ 0.78531436, -1.84073599],
       [-0.10350564,  1.37743509],
       [ 0.81396393,  0.55151442],
       [ 1.8672712 , -0.01044129],
       [ 1.62000877, -1.0541163 ],
       [ 1.00301462,  0.27848219],
       [ 1.32018911,  0.06648288],
       [ 0.26997327,  0.60531547],
       [ 1.45098464,  1.25425295]])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Another sanity check: the diagonal is full of zeroes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;differences&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;diagonal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]])
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;step-2-squared-differences&#34;&gt;Step 2: squared differences&lt;/h2&gt;
&lt;p&gt;Squaring the differences just requires a simple scalar broadcast:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# squaring each of the diffs&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sq_diff&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;differences&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Inspecting the first element again:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;sq_diff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([[0.00000000e+00, 0.00000000e+00],
       [6.16718647e-01, 3.38830899e+00],
       [1.07134184e-02, 1.89732742e+00],
       [6.62537277e-01, 3.04168152e-01],
       [3.48670173e+00, 1.09020611e-04],
       [2.62442843e+00, 1.11116117e+00],
       [1.00603833e+00, 7.75523312e-02],
       [1.74289929e+00, 4.41997347e-03],
       [7.28855680e-02, 3.66406821e-01],
       [2.10535644e+00, 1.57315046e+00]])
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;step-3-summing-squared-differences&#34;&gt;Step 3: summing squared differences&lt;/h2&gt;
&lt;p&gt;Now, we sum the coordinate differences along the last axis:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;dist_sq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sq_diff&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# note that this is equivalent to squared_diff.sum(2)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;We can inspect the diagonal once again to make sure each point has a squared distance of 0 from itself:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;dist_sq&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([[ 0.        ,  4.00502763,  1.90804084,  0.96670543,  3.48681075,
         3.7355896 ,  1.08359066,  1.74731927,  0.43929239,  3.67850689],
       [ 4.00502763,  0.        , 11.1466261 ,  5.72368281,  4.52060927,
         1.3154853 ,  4.53847911,  3.92357482,  6.2487442 , 10.02207345],
       [ 1.90804084, 11.1466261 ,  0.        ,  1.52389537,  5.81016221,
         8.8829441 ,  2.43208457,  3.74550245,  0.7356552 ,  2.4316139 ],
       [ 0.96670543,  5.72368281,  1.52389537,  0.        ,  1.42525042,
         3.22775829,  0.11028676,  0.49151953,  0.29882039,  0.89963684],
       [ 3.48681075,  4.52060927,  5.81016221,  1.42525042,  0.        ,
         1.15039622,  0.83041621,  0.30521614,  2.93051706,  1.77274602],
       [ 3.7355896 ,  1.3154853 ,  8.8829441 ,  3.22775829,  1.15039622,
         0.        ,  2.15650052,  1.34563435,  4.57630966,  5.35713773],
       [ 1.08359066,  4.53847911,  2.43208457,  0.11028676,  0.83041621,
         2.15650052,  0.        ,  0.14554337,  0.64416961,  1.15280571],
       [ 1.74731927,  3.92357482,  3.74550245,  0.49151953,  0.30521614,
         1.34563435,  0.14554337,  0.        ,  1.39329387,  1.4279052 ],
       [ 0.43929239,  6.2487442 ,  0.7356552 ,  0.29882039,  2.93051706,
         4.57630966,  0.64416961,  1.39329387,  0.        ,  1.81590771],
       [ 3.67850689, 10.02207345,  2.4316139 ,  0.89963684,  1.77274602,
         5.35713773,  1.15280571,  1.4279052 ,  1.81590771,  0.        ]])
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;step-4-sorting-squared-distances&#34;&gt;Step 4: sorting squared distances&lt;/h2&gt;
&lt;p&gt;Sorting each row by distance:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# again, notice: each point is closest to itself&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;nearest&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argsort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dist_sq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;axis&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;nearest&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([[0, 8, 3, 6, 7, 2, 4, 9, 5, 1],
       [1, 5, 7, 0, 4, 6, 3, 8, 9, 2],
       [2, 8, 3, 0, 9, 6, 7, 4, 5, 1],
       [3, 6, 8, 7, 9, 0, 4, 2, 5, 1],
       [4, 7, 6, 5, 3, 9, 8, 0, 1, 2],
       [5, 4, 1, 7, 6, 3, 0, 8, 9, 2],
       [6, 3, 7, 8, 4, 0, 9, 5, 2, 1],
       [7, 6, 4, 3, 5, 8, 9, 0, 2, 1],
       [8, 3, 0, 6, 2, 7, 9, 4, 5, 1],
       [9, 3, 6, 7, 4, 8, 2, 0, 5, 1]])
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;an-improvement-using-npargpartition-instead-of-npargsort&#34;&gt;An improvement: using &lt;code&gt;np.argpartition&lt;/code&gt; instead of &lt;code&gt;np.argsort&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;We can improve the solution by using &lt;code&gt;np.argpartition&lt;/code&gt;. Instead of sorting the full list of distances, it puts the K lowest values up front, and lists the remaining distances in an arbitrary order.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;K&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;nearest_partition&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argpartition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dist_sq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;K&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;axis&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Connecting each point two its 2 nearest neighbors:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# draw lines from each point to its two nearest neighbors&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;K&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nearest_partition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://anantd.github.io/files/knn_with_numpy/output_41_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Making sense of antibody tests</title>
      <link>https://anantd.github.io/post/understanding-antibody-tests/</link>
      <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://anantd.github.io/post/understanding-antibody-tests/</guid>
      <description>&lt;p&gt;How does a test that&amp;rsquo;s &amp;lsquo;99% accurate&amp;rsquo; become the practical equivalent of a coin flip? It&amp;rsquo;s a question that&amp;rsquo;s garnered some attention as the scrunity on antibody tests &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; increases. I&amp;rsquo;m paraphrasing the question from this explanation by Dr. Deborah Birx, responding to a question about how to interpret positive antibody tests:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;hellip; if you have 1 percent of your population infected and you have a test that’s only 99 percent specific, that means that when you find a positive, 50 percent of the time will be a real positive and 50 percent of the time it won’t be.”&lt;br&gt;
&amp;mdash; &lt;em&gt;Dr. Deborah Birx, April 20&lt;/em&gt; &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While there&amp;rsquo;s been some understandable confusion about this statistic, there&amp;rsquo;s also been some strong explanatory journalism. Here&amp;rsquo;s a good piece from &lt;a href=&#34;https://www.vox.com/2020/5/1/21240123/coronavirus-quest-diagnostics-antibody-test-covid&#34;&gt;Vox&lt;/a&gt;, and a &lt;a href=&#34;https://youtu.be/qtlSu7OhkYE&#34;&gt;great video from ProPublica&lt;/a&gt; (via &lt;a href=&#34;https://kottke.org/20/05/on-the-accuracy-of-covid-19-testing&#34;&gt;kottke.org&lt;/a&gt;) on how these tests work and what we can expect to learn from them.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;ve ever tried to teach someone statistics, you&amp;rsquo;ll appreciate the value of a vivid example. I&amp;rsquo;m sure I&amp;rsquo;ll be referencing this one for a while, so I thought I&amp;rsquo;d throw together a quick &lt;a href=&#34;https://www.reddit.com/r/explainlikeimfive/&#34;&gt;ELI5&lt;/a&gt; style explanation for posterity.&lt;/p&gt;
&lt;h2 id=&#34;what-makes-a-test-good&#34;&gt;What makes a test good?&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s how you&amp;rsquo;d want a test to work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you had COVID-19, the test should come back positive.&lt;/li&gt;
&lt;li&gt;If you never had COVID-19, the test should come back negative.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;rsquo;s pretty much it. Let&amp;rsquo;s add a way to measure how a test performs on these tasks.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you had COVID-19, the test should come back positive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is measured by the &lt;strong&gt;True Positive Rate (TPR)&lt;/strong&gt;. &lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s say an antibody test has TPR of 95%. Here&amp;rsquo;s what that means: if you tested 100 people who actually had the disease:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;95 of them would correctly test positive.&lt;/li&gt;
&lt;li&gt;5 people who had COVID-19 would test negative, and would not be tagged as recovered COVID cases (i.e. &lt;em&gt;false negatives&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;If you never had COVID-19, the test should come back negative.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is measured by the &lt;strong&gt;True Negative Rate (TNR)&lt;/strong&gt;. &lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;What happens when a test has a 95% TNR? If you tested 100 people who never had the disease:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;95 of them would be correctly test negative.&lt;/li&gt;
&lt;li&gt;5 people who never had the disease would test positive, and would be incorrectly  categorized as recovered COVID-19 cases (i.e. &lt;em&gt;false positives&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To have faith in a test, you want both TPR and TNR to be as high as possible: you want the test to do a great job at both ruling you &lt;em&gt;in&lt;/em&gt; if you had COVID-19 and ruling you &lt;em&gt;out&lt;/em&gt; if you didn&amp;rsquo;t. There&amp;rsquo;s an inherent trade off when you optimize for one over the other (ex: an over-zealous positive classification will lead to more false positives).&lt;/p&gt;
&lt;p&gt;To summarize: if you had COVID-19, you want to be in bucket A; if you never had COVID-19, you want to be in bucket B.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Had COVID-19&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Never had COVID-19&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Antibody test positive&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;✅ (&lt;strong&gt;A&lt;/strong&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;❌ (&lt;strong&gt;false positive&lt;/strong&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Antibody test negative&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;✅ (&lt;strong&gt;B&lt;/strong&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;what-does-a-positive-test-mean-for-me&#34;&gt;What does a positive test mean for me?&lt;/h2&gt;
&lt;p&gt;Understanding this setup is important, but &lt;em&gt;&amp;lsquo;How good is the test at spotting true positives and true negatives?&#39;&lt;/em&gt; isn&amp;rsquo;t the question we ultimately care about. The real question is, &lt;em&gt;&amp;lsquo;If I test positive, how sure can I be that I really had COVID-19?&#39;&lt;/em&gt; &lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;In other words, what&amp;rsquo;s the test&amp;rsquo;s &lt;strong&gt;Positive Predictive Value (PPV)&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;The short answer to that question: it depends. Specifically, it depends on what proportion of the population has been infected with COVID-19, i.e. the &lt;strong&gt;prevalence&lt;/strong&gt; of the disease. The number of people who&amp;rsquo;ve been infected in your city or town plays a major role in how you&amp;rsquo;d interpret a positive test result.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s why: when really few people have had COVID-19 (low prevalence), there just aren&amp;rsquo;t that many positive cases to be found. So if you test positive, you can&amp;rsquo;t easily tell if you&amp;rsquo;re one of the real positives who was correctly captured, or one of the false positives who slipped through the cracks. Conversely, when the proportion of infected people is high, the true positives vastly outnumber the false positives, making a positive test result much more conclusive.&lt;/p&gt;
&lt;p&gt;This effect is particularly pronounced when prevalence is low. With a prevalance of 1% and an antibody test with TPR and TNR of 99%, 50% of positive tests results will be real positives.&lt;/p&gt;
&lt;details class=&#34;admonition note&#34;&gt;&lt;summary class=&#34;admonition-title&#34;&gt;Show me the math&lt;/summary&gt;
&lt;p&gt;Say you live in a town of &lt;code&gt;10,000&lt;/code&gt; people, with a COVID-19 prevalence of &lt;code&gt;1%&lt;/code&gt;. Everyone gets an antibody test with a TPR of &lt;code&gt;99%&lt;/code&gt; and a TNR of &lt;code&gt;99%&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Of those &lt;code&gt;10,000&lt;/code&gt; people:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;100&lt;/code&gt; people had COVID-19 (&lt;code&gt;1%&lt;/code&gt; of &lt;code&gt;10,000&lt;/code&gt;)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;99&lt;/code&gt; of them correctly test positive (since TPR is &lt;code&gt;99%&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt; person tests negative (i.e. &lt;code&gt;1&lt;/code&gt; false negative)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;9900&lt;/code&gt; people never had COVID-19 (&lt;code&gt;99%&lt;/code&gt; of &lt;code&gt;10,000&lt;/code&gt;)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;9801&lt;/code&gt; of them test correctly test negative (since TNR is &lt;code&gt;99%&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;99&lt;/code&gt; people test positive (i.e. &lt;code&gt;99&lt;/code&gt; false positives)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the problem? The number of true positives and false positives is exactly the same, giving you a 50-50 chance of really being positive if you test positive.&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;If you&amp;rsquo;re curious, here&amp;rsquo;s a chart showing how PPV changes as prevalence increases. At a prevalence of ~2%, there&amp;rsquo;s still a one-third chance that a positive test is wrong.&lt;/p&gt;
&lt;figure class=&#34;center&#34;&gt;
    &lt;img src=&#34;https://anantd.github.io/files/covid_prevalence_zoomed.svg&#34;
         alt=&#34;Positive predictive value when prevalence is low (click/tap to enlarge)&#34;/&gt; &lt;figcaption&gt;
            &lt;p&gt;&lt;em&gt;Positive predictive value when prevalence is low (click/tap to enlarge)&lt;/em&gt;&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Zooming out, you can see how once prevalence gets past 10%, positive tests start becoming pretty reliable.&lt;/p&gt;
&lt;figure class=&#34;center&#34;&gt;
    &lt;img src=&#34;https://anantd.github.io/files/covid_prevalence_no_zoom.svg&#34;/&gt; 
&lt;/figure&gt;
&lt;p&gt;Here&amp;rsquo;s an &lt;a href=&#34;https://gist.github.com/anantd/7ceb6392f1bf5f0ec29e22cacc1038b3&#34;&gt;example script&lt;/a&gt; if you want to generate your own data. Hopefully that helps build some intution for how disease prevalance factors into a test&amp;rsquo;s effectiveness. It&amp;rsquo;s the reason why seroprevalance studies are so important; without them, it&amp;rsquo;s anyone&amp;rsquo;s guess where we fall on that curve.&lt;/p&gt;
&lt;p&gt;To see the motion-graphics version of this explanation, check out this video from ProPublica:&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube-nocookie.com/embed/qtlSu7OhkYE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;tests designed to see whether you&amp;rsquo;ve previously had COVID-19 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://www.vox.com/2020/5/1/21240123/coronavirus-quest-diagnostics-antibody-test-covid&#34;&gt;https://www.vox.com/2020/5/1/21240123/coronavirus-quest-diagnostics-antibody-test-covid&lt;/a&gt; &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;also called &lt;em&gt;sensitivity&lt;/em&gt;, easily confused with &lt;em&gt;specificity&lt;/em&gt;, which you&amp;rsquo;ll see in a minute. Don&amp;rsquo;t worry, I don&amp;rsquo;t plan on using either of them. &lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;also called &lt;em&gt;specificity&lt;/em&gt; &lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;We could frame this from the negative perspective too, but the same principle applies. &lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Getting started</title>
      <link>https://anantd.github.io/post/getting-started/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://anantd.github.io/post/getting-started/</guid>
      <description>&lt;p&gt;Previous versions of this site didn&amp;rsquo;t survive too long, but I&amp;rsquo;m cautiously optimistic this time. To imbue this iteration with some intent, I thought I&amp;rsquo;d start with a few points of inspiration.&lt;/p&gt;
&lt;p&gt;Before I get to those, a loose description of my goals for this site:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use frequent, public posts to develop defensible points of view on a variety of data-related subjects&lt;/li&gt;
&lt;li&gt;document learning checkpoints and share relevant projects&lt;/li&gt;
&lt;li&gt;develop a list of semi-polished notes-to-self &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On to the good stuff. Here&amp;rsquo;s a great excerpt from &lt;a href=&#34;https://www.collaborativefund.com/blog/selfish-writing/&#34;&gt;Morgan Housel on selfish writing&lt;/a&gt;, describing a cycle that will hopefully become familiar:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Good writers don’t walk around all day with 100,000 words of eloquent wisdom in their heads. No one can do that. They take some vague feeling they’ve been thinking about, dig into a bunch, write down what they’ve discovered, realize half of it doesn’t make sense, delete most of it, write some more, realize the new stuff contradicts itself, panic when they realize they don’t understand the topic as well as they thought they did, talk to other smart people about why that is, learn something new that reminds them of this other thing that might tie into the second paragraph, discover that this thing they believed before they started writing isn’t actually true, realize that if that thing isn’t true then this other thing is probably really important, and so on endlessly. Grinding through this process reveals bits of context that are hopefully new discoveries to the reader. More importantly, they were likely new discoveries to the writer before they set out writing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;David Robinson has some more &lt;a href=&#34;http://varianceexplained.org/r/start-blog/&#34;&gt;tactical advice, particularly for data scientists&lt;/a&gt;. He points out how each skill in the data analysis stack can be sharpened by writing publicly, and makes a great case for why hitting publish doesn&amp;rsquo;t just create external feedback loops, it also gives you a better grasp of your own strengths (this prompt deserves a special mention: &lt;em&gt;Which of your skills are more developed, or more important, than you thought they were?&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;My last recommendation is &lt;a href=&#34;https://guzey.com/personal/why-have-a-blog/&#34;&gt;Alexey Guzey&amp;rsquo;s &lt;em&gt;Why You Should Start a Blog Right Now&lt;/em&gt;&lt;/a&gt;, which hosts the most definitive collection of &amp;lsquo;why you should write online&amp;rsquo; advice I&amp;rsquo;ve encountered so far, and makes a great resource if you need more convincing &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;particularly in the notebooks section of this site &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;em&gt;Why unoriginal writing is useful&lt;/em&gt; is easily my favorite header in recent memory &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://anantd.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anantd.github.io/about/</guid>
      <description>&lt;div class=&#34;admonition note&#34;&gt;&lt;p class=&#34;admonition-title&#34;&gt;Coming soon&lt;/p&gt;
  


&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Notebooks</title>
      <link>https://anantd.github.io/notebooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anantd.github.io/notebooks/</guid>
      <description>&lt;div class=&#34;admonition note&#34;&gt;&lt;p class=&#34;admonition-title&#34;&gt;Coming soon&lt;/p&gt;
  
&lt;p&gt;
Some cleaned up notes-to-self on a bunch of dataviz and ML related topics.

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Sign up</title>
      <link>https://anantd.github.io/subscribe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anantd.github.io/subscribe/</guid>
      <description>&lt;iframe
scrolling=&#34;no&#34;
style=&#34;width:100%!important;height:220px;border:0px #ccc solid !important&#34;
src=&#34;https://buttondown.email/anant?as_embed=true&#34;
&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;br /&gt;
</description>
    </item>
    
  </channel>
</rss>